{"ast":null,"code":"var _jsxFileName = \"/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/Releases/CollectionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useDiscogs } from '../../utility/dataSource';\nimport { useApi } from '../../utility/backSource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionForm = props => {\n  _s();\n  const {\n    postData: postToDiscogs\n  } = useDiscogs();\n  const {\n    postData: postToBackend\n  } = useApi();\n  const {\n    authState\n  } = useAuthContext();\n  const [collectionData, setCollectionData] = useState({\n    notes: '',\n    rating: 0,\n    price_threshold: 0\n  });\n\n  // Add item to the Discogs collection\n  const addToDiscogsCollection = async () => {\n    console.log(\"[CollectionForm][addToDiscogsCollection]\");\n    try {\n      const endpoint = `/users/${authState.username}/collection/folders/1/releases/${props.id}`;\n      const data = {\n        notes: collectionData.notes,\n        rating: collectionData.rating\n      };\n      const response = await postToDiscogs(endpoint, data); // Post to Discogs API\n      console.log('Discogs collection response:', response);\n      return true;\n    } catch (error) {\n      console.error(\"Error adding to Discogs collection:\", error);\n      return false;\n    }\n  };\n  const addToBackend = async () => {\n    console.log(\"[CollectionForm][addToBackend]\");\n    try {\n      // First, create the record in the records table\n      const recordData = {\n        discogsId: Number(props.id),\n        title: props.record.title || '',\n        artist: props.record.artist || '',\n        releaseYear: props.record.releaseYear ? props.record.releaseYear.toString() : '0',\n        genre: props.record.genre || '',\n        styles: props.record.styles || ''\n      };\n      console.log('Record data:', recordData);\n      const recordResponse = await postToBackend(`/api/records`, recordData);\n      console.log('Record Response:', recordResponse);\n\n      // Then create the user record\n      const userRecordData = {\n        userId: authState.userId,\n        discogsId: Number(props.id),\n        rating: Number(collectionData.rating),\n        notes: collectionData.notes,\n        price_threshold: Number(collectionData.price_threshold),\n        wishlist: 0\n      };\n      console.log('User record data:', userRecordData);\n      const userRecordResponse = await postToBackend(`/api/users/${authState.userId}/collection`, userRecordData);\n      console.log('User record Response:', userRecordResponse);\n      return true;\n    } catch (error) {\n      console.error('Error during backend request:', error);\n      return false;\n    }\n  };\n\n  // Handle button click to add item to both Discogs and backend\n  const handleCollectionClick = async () => {\n    if (!authState.username) {\n      alert(\"Sign in to use this feature.\");\n      return;\n    }\n    const discogsResponse = await addToDiscogsCollection();\n    const backResponse = await addToBackend();\n    if (backResponse && discogsResponse) {\n      alert(\"Collection item added successfully.\");\n    } else if (backResponse) {\n      alert(\"Added to backend but failed to add to Discogs collection.\");\n    } else {\n      alert(\"Failed to add item.\");\n    }\n  };\n\n  // Handle form changes for collection data\n  const handleCollectionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCollectionData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCollectionClick,\n      className: \"btn btn-success w-100\",\n      children: \"Add To Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"notes\",\n          value: collectionData.notes,\n          onChange: handleCollectionChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating (1-5):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"rating\",\n          min: \"1\",\n          max: \"5\",\n          value: collectionData.rating,\n          onChange: handleCollectionChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price Threshold:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price_threshold\",\n          value: collectionData.price_threshold,\n          onChange: handleCollectionChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(CollectionForm, \"iPV+zUGvuQ19IIfxXr0jB12OJuI=\", false, function () {\n  return [useDiscogs, useApi, useAuthContext];\n});\n_c = CollectionForm;\nexport default CollectionForm;\nvar _c;\n$RefreshReg$(_c, \"CollectionForm\");","map":{"version":3,"names":["React","useState","useAuthContext","useDiscogs","useApi","jsxDEV","_jsxDEV","CollectionForm","props","_s","postData","postToDiscogs","postToBackend","authState","collectionData","setCollectionData","notes","rating","price_threshold","addToDiscogsCollection","console","log","endpoint","username","id","data","response","error","addToBackend","recordData","discogsId","Number","title","record","artist","releaseYear","toString","genre","styles","recordResponse","userRecordData","userId","wishlist","userRecordResponse","handleCollectionClick","alert","discogsResponse","backResponse","handleCollectionChange","e","name","value","target","prevState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","min","max","_c","$RefreshReg$"],"sources":["/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/Releases/CollectionForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useDiscogs } from '../../utility/dataSource'; \nimport { useApi } from '../../utility/backSource'; \n\nconst CollectionForm = (props) => {\n    const { postData: postToDiscogs } = useDiscogs();\n    const { postData: postToBackend } = useApi(); \n    const { authState } = useAuthContext();\n    const [collectionData, setCollectionData] = useState({\n        notes: '',\n        rating: 0,\n        price_threshold: 0,\n    });\n\n    // Add item to the Discogs collection\n    const addToDiscogsCollection = async () => {\n        console.log(\"[CollectionForm][addToDiscogsCollection]\");\n        try {\n            const endpoint = `/users/${authState.username}/collection/folders/1/releases/${props.id}`;\n            const data = {\n                notes: collectionData.notes,\n                rating: collectionData.rating,\n            };\n            const response = await postToDiscogs(endpoint, data); // Post to Discogs API\n            console.log('Discogs collection response:', response);\n            return true;\n        } catch (error) {\n            console.error(\"Error adding to Discogs collection:\", error);\n            return false;\n        }\n    };\n\n    \n    const addToBackend = async () => {\n        console.log(\"[CollectionForm][addToBackend]\");\n\n        try {\n            // First, create the record in the records table\n            const recordData = {\n                discogsId: Number(props.id),\n                title: props.record.title || '',\n                artist: props.record.artist || '',\n                releaseYear: props.record.releaseYear ? props.record.releaseYear.toString() : '0',\n                genre: props.record.genre || '',\n                styles: props.record.styles || ''\n            };\n            \n            console.log('Record data:', recordData);\n            const recordResponse = await postToBackend(`/api/records`, recordData); \n            console.log('Record Response:', recordResponse);\n\n            // Then create the user record\n            const userRecordData = {\n                userId: authState.userId,\n                discogsId: Number(props.id),\n                rating: Number(collectionData.rating),\n                notes: collectionData.notes,\n                price_threshold: Number(collectionData.price_threshold),\n                wishlist: 0,\n            };\n            console.log('User record data:', userRecordData);\n\n            const userRecordResponse = await postToBackend(`/api/users/${authState.userId}/collection`, userRecordData);\n            console.log('User record Response:', userRecordResponse);\n            return true;\n        } catch (error) {\n            console.error('Error during backend request:', error);\n            return false;\n        }\n    };\n\n    // Handle button click to add item to both Discogs and backend\n    const handleCollectionClick = async () => {\n        if (!authState.username) {\n            alert(\"Sign in to use this feature.\");\n            return;\n        }\n\n        const discogsResponse = await addToDiscogsCollection();\n        const backResponse = await addToBackend();\n\n        if (backResponse && discogsResponse) {\n            alert(\"Collection item added successfully.\");\n        } else if (backResponse) {\n            alert(\"Added to backend but failed to add to Discogs collection.\");\n        } else {\n            alert(\"Failed to add item.\");\n        }\n    };\n\n    // Handle form changes for collection data\n    const handleCollectionChange = (e) => {\n        const { name, value } = e.target;\n        setCollectionData((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    return (\n        <div className='col-6'>\n            <button onClick={handleCollectionClick} className='btn btn-success w-100'>\n                Add To Collection\n            </button>\n            <form>\n                <div>\n                    <label>Notes:</label>\n                    <textarea\n                        name=\"notes\"\n                        value={collectionData.notes}\n                        onChange={handleCollectionChange}\n                        className=\"form-control\"\n                    />\n                </div>\n                <div>\n                    <label>Rating (1-5):</label>\n                    <input\n                        type=\"number\"\n                        name=\"rating\"\n                        min=\"1\"\n                        max=\"5\"\n                        value={collectionData.rating}\n                        onChange={handleCollectionChange}\n                        className=\"form-control\"\n                    />\n                </div>\n                <div>\n                    <label>Price Threshold:</label>\n                    <input\n                        type=\"number\"\n                        name=\"price_threshold\"\n                        value={collectionData.price_threshold}\n                        onChange={handleCollectionChange}\n                        className=\"form-control\"\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CollectionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}