{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: 'http://localhost:3000'\n});\nexport const useApi = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getData = async endpoint => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.get(endpoint);\n      return response.data;\n    } catch (err) {\n      setError(err);\n      console.error(\"Error fetching data:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateData = async (endpoint, data) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.put(endpoint, data);\n      return response.data;\n    } catch (err) {\n      setError(err);\n      console.error(\"Error updating data:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const postData = async (endpoint, data) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.post(endpoint, data);\n      return response.data;\n    } catch (err) {\n      setError(err);\n      console.error(\"Error posting data:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteData = async endpoint => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.delete(endpoint);\n      return response.data;\n    } catch (err) {\n      setError(err);\n      console.error(\"Error deleting data:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    getData,\n    updateData,\n    postData,\n    deleteData,\n    loading,\n    error\n  };\n};\n_s(useApi, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["useState","axios","api","create","baseURL","useApi","_s","loading","setLoading","error","setError","getData","endpoint","response","get","data","err","console","updateData","put","postData","post","deleteData","delete"],"sources":["/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/utility/backSource.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3000'\n});\n\nexport const useApi = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const getData = async (endpoint) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await api.get(endpoint);\n            return response.data;\n        } catch (err) {\n            setError(err);\n            console.error(\"Error fetching data:\", err);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const updateData = async (endpoint, data) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await api.put(endpoint, data);\n            return response.data;\n        } catch (err) {\n            setError(err);\n            console.error(\"Error updating data:\", err);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const postData = async (endpoint, data) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await api.post(endpoint, data);\n            return response.data;\n        } catch (err) {\n            setError(err);\n            console.error(\"Error posting data:\", err);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const deleteData = async (endpoint) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await api.delete(endpoint);\n            return response.data;\n        } catch (err) {\n            setError(err);\n            console.error(\"Error deleting data:\", err);\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return {\n        getData,\n        updateData,\n        postData,\n        deleteData,\n        loading,\n        error,\n    };\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,OAAO,GAAG,MAAOC,QAAQ,IAAK;IAChCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAACF,QAAQ,CAAC;MACxC,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVN,QAAQ,CAACM,GAAG,CAAC;MACbC,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAEO,GAAG,CAAC;MAC1C,MAAMA,GAAG;IACb,CAAC,SAAS;MACNR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMU,UAAU,GAAG,MAAAA,CAAON,QAAQ,EAAEG,IAAI,KAAK;IACzCP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACiB,GAAG,CAACP,QAAQ,EAAEG,IAAI,CAAC;MAC9C,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVN,QAAQ,CAACM,GAAG,CAAC;MACbC,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAEO,GAAG,CAAC;MAC1C,MAAMA,GAAG;IACb,CAAC,SAAS;MACNR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAAA,CAAOR,QAAQ,EAAEG,IAAI,KAAK;IACvCP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACmB,IAAI,CAACT,QAAQ,EAAEG,IAAI,CAAC;MAC/C,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVN,QAAQ,CAACM,GAAG,CAAC;MACbC,OAAO,CAACR,KAAK,CAAC,qBAAqB,EAAEO,GAAG,CAAC;MACzC,MAAMA,GAAG;IACb,CAAC,SAAS;MACNR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMc,UAAU,GAAG,MAAOV,QAAQ,IAAK;IACnCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACqB,MAAM,CAACX,QAAQ,CAAC;MAC3C,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVN,QAAQ,CAACM,GAAG,CAAC;MACbC,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAEO,GAAG,CAAC;MAC1C,MAAMA,GAAG;IACb,CAAC,SAAS;MACNR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,OAAO;IACHG,OAAO;IACPO,UAAU;IACVE,QAAQ;IACRE,UAAU;IACVf,OAAO;IACPE;EACJ,CAAC;AACL,CAAC;AAACH,EAAA,CAxEWD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}