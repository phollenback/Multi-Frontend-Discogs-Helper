{"ast":null,"code":"var _jsxFileName = \"/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/UserInfo/WantlistScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useApi } from '../../utility/backSource';\nimport { useDiscogs } from '../../utility/dataSource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WantlistScreen = () => {\n  _s();\n  const [wantlist, setWantlist] = useState([]);\n  const [syncing, setSyncing] = useState(false);\n  const {\n    authState\n  } = useAuthContext();\n  // Remove all backend fetching\n  // const { getData, deleteData, postData } = useApi();\n  const {\n    getData: getDiscogsData,\n    deleteData: deleteDiscogsData\n  } = useDiscogs();\n  const {\n    getData: getBackendData,\n    updateData,\n    deleteData: deleteBackendData,\n    postData\n  } = useApi();\n  const userInitiatedSync = useRef(false);\n  useEffect(() => {\n    userInitiatedSync.current = false;\n    syncWithDiscogs();\n    // eslint-disable-next-line\n  }, []);\n\n  // Remove handleDeleteClick and handleEditClick if they depend on backend\n\n  const renderWantlistItems = () => {\n    return wantlist.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: item.discogs_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumb,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.price_threshold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => handleEditClick(item.discogs_id),\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => handleDeleteClick(item.discogs_id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, item.discogs_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  };\n  const handleEditClick = async discogsId => {\n    var _item$rating, _item$price_threshold;\n    // Prompt user for new notes, rating, and price threshold\n    const item = wantlist.find(i => i.discogs_id === discogsId);\n    const newNotes = prompt('Edit notes:', (item === null || item === void 0 ? void 0 : item.notes) || '');\n    if (newNotes === null) return; // Cancelled\n    const newRatingStr = prompt('Edit rating (0-5):', (item === null || item === void 0 ? void 0 : (_item$rating = item.rating) === null || _item$rating === void 0 ? void 0 : _item$rating.toString()) || '0');\n    if (newRatingStr === null) return; // Cancelled\n    const newRating = parseInt(newRatingStr, 10);\n    if (isNaN(newRating) || newRating < 0 || newRating > 5) {\n      alert('Invalid rating. Must be 0-5.');\n      return;\n    }\n    const newPriceThresholdStr = prompt('Edit price threshold:', (item === null || item === void 0 ? void 0 : (_item$price_threshold = item.price_threshold) === null || _item$price_threshold === void 0 ? void 0 : _item$price_threshold.toString()) || '');\n    if (newPriceThresholdStr === null) return; // Cancelled\n    const newPriceThreshold = parseFloat(newPriceThresholdStr);\n    if (isNaN(newPriceThreshold)) {\n      alert('Invalid price threshold.');\n      return;\n    }\n    try {\n      console.log('Updating Discogs:', {\n        endpoint: `/users/pskills/wants/${discogsId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`,\n        notes: newNotes,\n        rating: newRating\n      });\n      // TODO: Discogs API update is currently failing with 405 error\n      // Need to investigate correct endpoint for updating wantlist items\n      // For now, just update the backend database\n      /*\n      const discogsResp = await putDiscogsData(`/users/pskills/wants/${discogsId}`, {\n          notes: newNotes,\n          rating: newRating\n      });\n      console.log('Discogs PUT response:', discogsResp);\n      */\n\n      // Check if item exists in backend collection\n      const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n      const existingItem = backendCollection.find(b => b.discogs_id === discogsId);\n      let backendResp;\n      if (existingItem) {\n        // Update existing item\n        console.log('Updating existing backend item:', {\n          endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n          price_threshold: newPriceThreshold,\n          rating: newRating,\n          notes: newNotes\n        });\n        backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, {\n          price_threshold: newPriceThreshold,\n          rating: newRating,\n          notes: newNotes\n        });\n      } else {\n        // Create new item\n        console.log('Creating new backend item:', {\n          endpoint: `/api/users/${authState.userId}/collection`,\n          discogsId: discogsId,\n          price_threshold: newPriceThreshold,\n          rating: newRating,\n          notes: newNotes\n        });\n        backendResp = await postData(`/api/users/${authState.userId}/collection`, {\n          userId: authState.userId,\n          discogsId: discogsId,\n          title: item.title || '',\n          artist: item.artist || '',\n          genre: item.genre || '',\n          releaseYear: item.releaseYear || '',\n          styles: item.styles || '',\n          rating: newRating,\n          notes: newNotes,\n          price_threshold: newPriceThreshold,\n          wishlist: 1\n        });\n      }\n      console.log('Backend response:', backendResp);\n\n      // Update UI\n      setWantlist(wantlist.map(item => item.discogs_id === discogsId ? {\n        ...item,\n        notes: newNotes,\n        rating: newRating,\n        price_threshold: newPriceThreshold\n      } : item));\n    } catch (err) {\n      console.error('Failed to update item:', err);\n      alert('Failed to update item.');\n    }\n  };\n  const handleDeleteClick = async discogsId => {\n    try {\n      console.log('Deleting from Discogs wantlist:', {\n        endpoint: `/users/${authState.username}/wants/${discogsId}`,\n        discogsId\n      });\n\n      // Delete from Discogs API\n      const discogsResp = await deleteDiscogsData(`/users/${authState.username}/wants/${discogsId}`);\n      console.log('Discogs DELETE response:', discogsResp);\n      console.log('Deleting from backend:', {\n        endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n        discogsId\n      });\n\n      // Delete from backend database\n      const backendResp = await deleteBackendData(`/api/users/${authState.userId}/collection/${discogsId}`);\n      console.log('Backend DELETE response:', backendResp);\n\n      // Update UI\n      setWantlist(wantlist.filter(item => item.discogs_id !== discogsId));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n      alert('Failed to delete item from Discogs wantlist.');\n    }\n  };\n  const syncWithDiscogs = async () => {\n    setSyncing(true);\n    try {\n      // Fetch wantlist from Discogs API\n      const discogsData = await getDiscogsData('/users/pskills/wants');\n      const mapped = discogsData.wants.map(w => {\n        var _w$basic_information$;\n        return {\n          discogs_id: w.basic_information.id,\n          thumb: w.basic_information.thumb,\n          title: w.basic_information.title,\n          artist: w.basic_information.artists.map(a => a.name).join(', '),\n          genre: (_w$basic_information$ = w.basic_information.genres) === null || _w$basic_information$ === void 0 ? void 0 : _w$basic_information$.join(', '),\n          releaseYear: typeof w.basic_information.year === 'number' ? w.basic_information.year.toString() : '',\n          styles: Array.isArray(w.basic_information.styles) ? w.basic_information.styles.join(', ') : '',\n          notes: w.notes,\n          rating: w.rating,\n          price_threshold: '',\n          cover: w.basic_information.cover_image\n        };\n      });\n\n      // Fetch backend collection for this user\n      const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n      console.log('Backend collection:', backendCollection);\n\n      // Merge backend fields into wantlist\n      const merged = mapped.map(item => {\n        const backendItem = backendCollection.find(b => b.discogs_id === item.discogs_id);\n        return backendItem ? {\n          ...item,\n          notes: backendItem.notes || item.notes,\n          rating: backendItem.rating || item.rating,\n          price_threshold: backendItem.price_threshold || ''\n        } : item;\n      });\n      setWantlist(merged);\n      console.log('Merged wantlist:', merged);\n      if (userInitiatedSync.current) {\n        alert('Synced with Discogs!');\n      }\n    } catch (err) {\n      console.error('Sync error:', err);\n      alert('Failed to sync with Discogs.');\n    } finally {\n      setSyncing(false);\n    }\n  };\n  const handleSyncClick = () => {\n    userInitiatedSync.current = true;\n    syncWithDiscogs();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mx-5\",\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: [authState.username, \"'s Wantlist!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mx-5 my-2\",\n      onClick: handleSyncClick,\n      disabled: syncing,\n      children: syncing ? 'Syncing...' : 'Sync with Discogs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Discogs #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Price Threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderWantlistItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n_s(WantlistScreen, \"ShGzQsVTuHhVxnYuIhNzfO8EPk8=\", false, function () {\n  return [useAuthContext, useDiscogs, useApi];\n});\n_c = WantlistScreen;\nexport default WantlistScreen;\n;\nvar _c;\n$RefreshReg$(_c, \"WantlistScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuthContext","useApi","useDiscogs","jsxDEV","_jsxDEV","WantlistScreen","_s","wantlist","setWantlist","syncing","setSyncing","authState","getData","getDiscogsData","deleteData","deleteDiscogsData","getBackendData","updateData","deleteBackendData","postData","userInitiatedSync","current","syncWithDiscogs","renderWantlistItems","map","item","children","scope","discogs_id","fileName","_jsxFileName","lineNumber","columnNumber","src","thumb","alt","title","artist","genre","notes","rating","price_threshold","type","className","onClick","handleEditClick","handleDeleteClick","discogsId","_item$rating","_item$price_threshold","find","i","newNotes","prompt","newRatingStr","toString","newRating","parseInt","isNaN","alert","newPriceThresholdStr","newPriceThreshold","parseFloat","console","log","endpoint","encodeURIComponent","backendCollection","userId","existingItem","b","backendResp","releaseYear","styles","wishlist","err","error","username","discogsResp","filter","discogsData","mapped","wants","w","_w$basic_information$","basic_information","id","artists","a","name","join","genres","year","Array","isArray","cover","cover_image","merged","backendItem","handleSyncClick","disabled","_c","$RefreshReg$"],"sources":["/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/UserInfo/WantlistScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useApi } from '../../utility/backSource'\nimport { useDiscogs } from '../../utility/dataSource';\n\nconst WantlistScreen = () => {\n    const [wantlist, setWantlist] = useState([]);\n    const [syncing, setSyncing] = useState(false);\n    const { authState } = useAuthContext();\n    // Remove all backend fetching\n    // const { getData, deleteData, postData } = useApi();\n    const { getData: getDiscogsData, deleteData: deleteDiscogsData } = useDiscogs();\n    const { getData: getBackendData, updateData, deleteData: deleteBackendData, postData } = useApi();\n    const userInitiatedSync = useRef(false);\n\n    useEffect(() => {\n        userInitiatedSync.current = false;\n        syncWithDiscogs();\n        // eslint-disable-next-line\n    }, []);\n\n    // Remove handleDeleteClick and handleEditClick if they depend on backend\n\n    const renderWantlistItems = () => {\n        return wantlist.map((item) => (\n            <tr key={item.discogs_id}>\n                <th scope=\"row\">{item.discogs_id}</th>\n                <td><img src={item.thumb} alt={item.title} /></td>\n                <td>{item.title}</td>\n                <td>{item.artist}</td>\n                <td>{item.genre}</td>\n                <td>{item.notes}</td>\n                <td>{item.rating}</td>\n                <td>{item.price_threshold}</td>\n                <td>\n                    <button \n                        type='button' \n                        className='btn btn-primary' \n                        onClick={() => handleEditClick(item.discogs_id)}>\n                        EDIT\n                    </button>\n                </td>\n                <td>\n                    <button \n                        type='button' \n                        className='btn btn-primary' \n                        onClick={() => handleDeleteClick(item.discogs_id)}>\n                        DELETE\n                    </button>\n                </td>\n            </tr>\n        ));\n    };\n    \n    const handleEditClick = async (discogsId) => {\n        // Prompt user for new notes, rating, and price threshold\n        const item = wantlist.find(i => i.discogs_id === discogsId);\n        const newNotes = prompt('Edit notes:', item?.notes || '');\n        if (newNotes === null) return; // Cancelled\n        const newRatingStr = prompt('Edit rating (0-5):', item?.rating?.toString() || '0');\n        if (newRatingStr === null) return; // Cancelled\n        const newRating = parseInt(newRatingStr, 10);\n        if (isNaN(newRating) || newRating < 0 || newRating > 5) {\n            alert('Invalid rating. Must be 0-5.');\n            return;\n        }\n        const newPriceThresholdStr = prompt('Edit price threshold:', item?.price_threshold?.toString() || '');\n        if (newPriceThresholdStr === null) return; // Cancelled\n        const newPriceThreshold = parseFloat(newPriceThresholdStr);\n        if (isNaN(newPriceThreshold)) {\n            alert('Invalid price threshold.');\n            return;\n        }\n        try {\n            console.log('Updating Discogs:', {\n                endpoint: `/users/pskills/wants/${discogsId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`,\n                notes: newNotes,\n                rating: newRating\n            });\n            // TODO: Discogs API update is currently failing with 405 error\n            // Need to investigate correct endpoint for updating wantlist items\n            // For now, just update the backend database\n            /*\n            const discogsResp = await putDiscogsData(`/users/pskills/wants/${discogsId}`, {\n                notes: newNotes,\n                rating: newRating\n            });\n            console.log('Discogs PUT response:', discogsResp);\n            */\n            \n            // Check if item exists in backend collection\n            const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n            const existingItem = backendCollection.find(b => b.discogs_id === discogsId);\n            \n            let backendResp;\n            if (existingItem) {\n                // Update existing item\n                console.log('Updating existing backend item:', {\n                    endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n                    price_threshold: newPriceThreshold,\n                    rating: newRating,\n                    notes: newNotes\n                });\n                backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, { \n                    price_threshold: newPriceThreshold, \n                    rating: newRating, \n                    notes: newNotes \n                });\n            } else {\n                // Create new item\n                console.log('Creating new backend item:', {\n                    endpoint: `/api/users/${authState.userId}/collection`,\n                    discogsId: discogsId,\n                    price_threshold: newPriceThreshold,\n                    rating: newRating,\n                    notes: newNotes\n                });\n                backendResp = await postData(`/api/users/${authState.userId}/collection`, {\n                    userId: authState.userId,\n                    discogsId: discogsId,\n                    title: item.title || '',\n                    artist: item.artist || '',\n                    genre: item.genre || '',\n                    releaseYear: item.releaseYear || '',\n                    styles: item.styles || '',\n                    rating: newRating,\n                    notes: newNotes,\n                    price_threshold: newPriceThreshold,\n                    wishlist: 1\n                });\n            }\n            console.log('Backend response:', backendResp);\n            \n            // Update UI\n            setWantlist(wantlist.map(item =>\n                item.discogs_id === discogsId\n                    ? { ...item, notes: newNotes, rating: newRating, price_threshold: newPriceThreshold }\n                    : item\n            ));\n        } catch (err) {\n            console.error('Failed to update item:', err);\n            alert('Failed to update item.');\n        }\n    };\n    \n    const handleDeleteClick = async (discogsId) => {\n        try {\n            console.log('Deleting from Discogs wantlist:', {\n                endpoint: `/users/${authState.username}/wants/${discogsId}`,\n                discogsId\n            });\n            \n            // Delete from Discogs API\n            const discogsResp = await deleteDiscogsData(`/users/${authState.username}/wants/${discogsId}`);\n            console.log('Discogs DELETE response:', discogsResp);\n            \n            console.log('Deleting from backend:', {\n                endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n                discogsId\n            });\n            \n            // Delete from backend database\n            const backendResp = await deleteBackendData(`/api/users/${authState.userId}/collection/${discogsId}`);\n            console.log('Backend DELETE response:', backendResp);\n            \n            // Update UI\n            setWantlist(wantlist.filter(item => item.discogs_id !== discogsId));\n        } catch (err) {\n            console.error('Failed to delete item:', err);\n            alert('Failed to delete item from Discogs wantlist.');\n        }\n    };\n\n    const syncWithDiscogs = async () => {\n        setSyncing(true);\n        try {\n            // Fetch wantlist from Discogs API\n            const discogsData = await getDiscogsData('/users/pskills/wants');\n            const mapped = discogsData.wants.map(w => ({\n                discogs_id: w.basic_information.id,\n                thumb: w.basic_information.thumb,\n                title: w.basic_information.title,\n                artist: w.basic_information.artists.map(a => a.name).join(', '),\n                genre: w.basic_information.genres?.join(', '),\n                releaseYear: (typeof w.basic_information.year === 'number') ? w.basic_information.year.toString() : '',\n                styles: Array.isArray(w.basic_information.styles) \n                    ? w.basic_information.styles.join(', ')\n                    : '',\n                notes: w.notes,\n                rating: w.rating,\n                price_threshold: '',\n                cover: w.basic_information.cover_image\n            }));\n            \n            // Fetch backend collection for this user\n            const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n            console.log('Backend collection:', backendCollection);\n            \n            // Merge backend fields into wantlist\n            const merged = mapped.map(item => {\n                const backendItem = backendCollection.find(b => b.discogs_id === item.discogs_id);\n                return backendItem ? {\n                    ...item,\n                    notes: backendItem.notes || item.notes,\n                    rating: backendItem.rating || item.rating,\n                    price_threshold: backendItem.price_threshold || ''\n                } : item;\n            });\n            \n            setWantlist(merged);\n            console.log('Merged wantlist:', merged);\n            if (userInitiatedSync.current) {\n                alert('Synced with Discogs!');\n            }\n        } catch (err) {\n            console.error('Sync error:', err);\n            alert('Failed to sync with Discogs.');\n        } finally {\n            setSyncing(false);\n        }\n    };\n\n    const handleSyncClick = () => {\n        userInitiatedSync.current = true;\n        syncWithDiscogs();\n    };\n\n    return (\n        <div>\n            <h1 className='mx-5'>\n                <u>{authState.username}'s Wantlist!</u>\n            </h1>\n            <button className='btn btn-success mx-5 my-2' onClick={handleSyncClick} disabled={syncing}>\n                {syncing ? 'Syncing...' : 'Sync with Discogs'}\n            </button>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Discogs #</th>\n                        <th scope=\"col\">Cover</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Artist</th>\n                        <th scope=\"col\">Genre</th>\n                        <th scope=\"col\">Notes</th>\n                        <th scope=\"col\">Rating</th>\n                        <th scope=\"col\">Price Threshold</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderWantlistItems()}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default WantlistScreen;;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}