{"ast":null,"code":"var _jsxFileName = \"/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/UserInfo/CollectionScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useApi } from '../../utility/backSource';\nimport { useDiscogs } from '../../utility/dataSource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionScreen = () => {\n  _s();\n  const [collection, setCollection] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1); // Default to \"Uncategorized\"\n  const [syncing, setSyncing] = useState(false);\n  const {\n    authState\n  } = useAuthContext();\n  const {\n    getData: getDiscogsData,\n    deleteData: deleteDiscogsData,\n    putData: putDiscogsData\n  } = useDiscogs();\n  const {\n    getData: getBackendData,\n    updateData\n  } = useApi();\n  const userInitiatedSync = useRef(false);\n  useEffect(() => {\n    userInitiatedSync.current = false;\n    loadFolders();\n    syncCollection();\n    // eslint-disable-next-line\n  }, [selectedFolder]);\n  const loadFolders = async () => {\n    try {\n      const foldersData = await getDiscogsData(`/users/${authState.username}/collection/folders`);\n      setFolders(foldersData.folders || []);\n    } catch (err) {\n      console.error('Failed to load folders:', err);\n    }\n  };\n  const syncCollection = async () => {\n    setSyncing(true);\n    try {\n      // Fetch collection from Discogs API\n      const discogsData = await getDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases`);\n      console.log('Raw Discogs data:', discogsData);\n      const mapped = discogsData.releases.map(release => {\n        console.log('Processing release:', release);\n\n        // Safely extract artist names\n        let artistNames = '';\n        if (release.basic_information.artists && Array.isArray(release.basic_information.artists)) {\n          artistNames = release.basic_information.artists.map(a => a && typeof a === 'object' && a.name ? a.name : '').filter(name => name !== '').join(', ');\n        }\n\n        // Safely extract genres\n        let genres = '';\n        if (release.basic_information.genres && Array.isArray(release.basic_information.genres)) {\n          genres = release.basic_information.genres.map(g => typeof g === 'string' ? g : '').filter(g => g !== '').join(', ');\n        }\n\n        // Ensure all values are strings, numbers, or null\n        const mappedItem = {\n          discogs_id: release.basic_information.id || null,\n          instance_id: release.instance_id || null,\n          thumb: typeof release.basic_information.thumb === 'string' ? release.basic_information.thumb : '',\n          title: typeof release.basic_information.title === 'string' ? release.basic_information.title : '',\n          artist: artistNames,\n          genre: genres,\n          notes: typeof release.notes === 'string' ? release.notes : '',\n          rating: typeof release.rating === 'number' ? release.rating : 0,\n          price_threshold: '',\n          cover: typeof release.basic_information.cover_image === 'string' ? release.basic_information.cover_image : '',\n          folder_id: selectedFolder\n        };\n        console.log('Mapped item:', mappedItem);\n        return mappedItem;\n      });\n\n      // Fetch backend collection for this user\n      const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n      console.log('Backend collection:', backendCollection);\n\n      // Merge backend fields into collection\n      const merged = mapped.map(item => {\n        const backendItem = backendCollection.find(b => b.discogs_id === item.discogs_id);\n        const mergedItem = backendItem ? {\n          ...item,\n          notes: typeof backendItem.notes === 'string' ? backendItem.notes : item.notes || '',\n          rating: typeof backendItem.rating === 'number' ? backendItem.rating : item.rating || 0,\n          price_threshold: typeof backendItem.price_threshold === 'string' || typeof backendItem.price_threshold === 'number' ? backendItem.price_threshold.toString() : ''\n        } : item;\n        console.log('Merged item:', mergedItem);\n        return mergedItem;\n      });\n      setCollection(merged);\n      console.log('Final collection:', merged);\n      if (userInitiatedSync.current) {\n        alert('Synced with Discogs!');\n      }\n    } catch (err) {\n      console.error('Sync error:', err);\n      alert('Failed to sync with Discogs.');\n    } finally {\n      setSyncing(false);\n    }\n  };\n  const handleEditClick = async (discogsId, instanceId) => {\n    var _item$rating, _item$price_threshold;\n    const item = collection.find(i => i.discogs_id === discogsId && i.instance_id === instanceId);\n    const newNotes = prompt('Edit notes:', (item === null || item === void 0 ? void 0 : item.notes) || '');\n    if (newNotes === null) return;\n    const newRatingStr = prompt('Edit rating (0-5):', (item === null || item === void 0 ? void 0 : (_item$rating = item.rating) === null || _item$rating === void 0 ? void 0 : _item$rating.toString()) || '0');\n    if (newRatingStr === null) return;\n    const newRating = parseInt(newRatingStr, 10);\n    if (isNaN(newRating) || newRating < 0 || newRating > 5) {\n      alert('Invalid rating. Must be 0-5.');\n      return;\n    }\n    const newPriceThresholdStr = prompt('Edit price threshold:', (item === null || item === void 0 ? void 0 : (_item$price_threshold = item.price_threshold) === null || _item$price_threshold === void 0 ? void 0 : _item$price_threshold.toString()) || '');\n    if (newPriceThresholdStr === null) return;\n    const newPriceThreshold = parseFloat(newPriceThresholdStr);\n    if (isNaN(newPriceThreshold)) {\n      alert('Invalid price threshold.');\n      return;\n    }\n    try {\n      console.log('Updating Discogs collection:', {\n        endpoint: `/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`,\n        notes: newNotes,\n        rating: newRating\n      });\n\n      // Update rating and notes on Discogs\n      const discogsResp = await putDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`);\n      console.log('Discogs PUT response:', discogsResp);\n      console.log('Updating backend:', {\n        endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n        price_threshold: newPriceThreshold,\n        rating: newRating,\n        notes: newNotes\n      });\n\n      // Update backend database\n      const backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, {\n        price_threshold: newPriceThreshold,\n        rating: newRating,\n        notes: newNotes\n      });\n      console.log('Backend PUT response:', backendResp);\n\n      // Update UI\n      setCollection(collection.map(item => item.discogs_id === discogsId && item.instance_id === instanceId ? {\n        ...item,\n        notes: newNotes,\n        rating: newRating,\n        price_threshold: newPriceThreshold\n      } : item));\n    } catch (err) {\n      console.error('Failed to update item:', err);\n      alert('Failed to update item.');\n    }\n  };\n  const handleDeleteClick = async (discogsId, instanceId) => {\n    try {\n      console.log('Deleting from Discogs collection:', {\n        endpoint: `/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}`,\n        discogsId,\n        instanceId\n      });\n\n      // Delete from Discogs API\n      const discogsResp = await deleteDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}`);\n      console.log('Discogs DELETE response:', discogsResp);\n      console.log('Deleting from backend:', {\n        endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n        discogsId\n      });\n\n      // Delete from backend database\n      const backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, {\n        deleted: true\n      });\n      console.log('Backend DELETE response:', backendResp);\n\n      // Update UI\n      setCollection(collection.filter(item => !(item.discogs_id === discogsId && item.instance_id === instanceId)));\n    } catch (err) {\n      console.error('Failed to delete item:', err);\n      alert('Failed to delete item from collection.');\n    }\n  };\n  const handleSyncClick = () => {\n    userInitiatedSync.current = true;\n    syncCollection();\n  };\n\n  // Helper function to safely convert any value to a string\n  const safeToString = value => {\n    if (value === null || value === undefined) return '';\n    if (typeof value === 'string') return value;\n    if (typeof value === 'number') return value.toString();\n    if (typeof value === 'boolean') return value.toString();\n    if (Array.isArray(value)) return value.join(', ');\n    if (typeof value === 'object') {\n      console.warn('Attempting to render object:', value);\n      return '[Object]';\n    }\n    return String(value);\n  };\n  const renderCollectionItems = () => {\n    return collection.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: safeToString(item.discogs_id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.instance_id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.thumb ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumb,\n          alt: safeToString(item.title),\n          style: {\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.artist)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.genre)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.notes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: safeToString(item.price_threshold)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => handleEditClick(item.discogs_id, item.instance_id),\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger btn-sm\",\n          onClick: () => handleDeleteClick(item.discogs_id, item.instance_id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, `${item.discogs_id}-${item.instance_id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mx-5\",\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: [authState.username, \"'s Collection!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-5 my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select d-inline-block w-auto me-3\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(parseInt(e.target.value)),\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.id,\n          children: [folder.name, \" (\", folder.count, \" items)\"]\n        }, folder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleSyncClick,\n        disabled: syncing,\n        children: syncing ? 'Syncing...' : 'Sync with Discogs'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Discogs #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Instance #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Price Threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderCollectionItems()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n};\n_s(CollectionScreen, \"YXNFqgBYYdMOaacAmhYG8jXzkAk=\", false, function () {\n  return [useAuthContext, useDiscogs, useApi];\n});\n_c = CollectionScreen;\nexport default CollectionScreen;\nvar _c;\n$RefreshReg$(_c, \"CollectionScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuthContext","useApi","useDiscogs","jsxDEV","_jsxDEV","CollectionScreen","_s","collection","setCollection","folders","setFolders","selectedFolder","setSelectedFolder","syncing","setSyncing","authState","getData","getDiscogsData","deleteData","deleteDiscogsData","putData","putDiscogsData","getBackendData","updateData","userInitiatedSync","current","loadFolders","syncCollection","foldersData","username","err","console","error","discogsData","log","mapped","releases","map","release","artistNames","basic_information","artists","Array","isArray","a","name","filter","join","genres","g","mappedItem","discogs_id","id","instance_id","thumb","title","artist","genre","notes","rating","price_threshold","cover","cover_image","folder_id","backendCollection","userId","merged","item","backendItem","find","b","mergedItem","toString","alert","handleEditClick","discogsId","instanceId","_item$rating","_item$price_threshold","i","newNotes","prompt","newRatingStr","newRating","parseInt","isNaN","newPriceThresholdStr","newPriceThreshold","parseFloat","endpoint","encodeURIComponent","discogsResp","backendResp","handleDeleteClick","deleted","handleSyncClick","safeToString","value","undefined","warn","String","renderCollectionItems","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","type","className","onClick","onChange","e","target","folder","count","disabled","_c","$RefreshReg$"],"sources":["/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/components/UserInfo/CollectionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuthContext } from '../../AuthContext';\nimport { useApi } from '../../utility/backSource';\nimport { useDiscogs } from '../../utility/dataSource';\n\nconst CollectionScreen = () => {\n    const [collection, setCollection] = useState([]);\n    const [folders, setFolders] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1); // Default to \"Uncategorized\"\n    const [syncing, setSyncing] = useState(false);\n    const { authState } = useAuthContext();\n    const { getData: getDiscogsData, deleteData: deleteDiscogsData, putData: putDiscogsData } = useDiscogs();\n    const { getData: getBackendData, updateData } = useApi();\n    const userInitiatedSync = useRef(false);\n\n    useEffect(() => {\n        userInitiatedSync.current = false;\n        loadFolders();\n        syncCollection();\n        // eslint-disable-next-line\n    }, [selectedFolder]);\n\n    const loadFolders = async () => {\n        try {\n            const foldersData = await getDiscogsData(`/users/${authState.username}/collection/folders`);\n            setFolders(foldersData.folders || []);\n        } catch (err) {\n            console.error('Failed to load folders:', err);\n        }\n    };\n\n    const syncCollection = async () => {\n        setSyncing(true);\n        try {\n            // Fetch collection from Discogs API\n            const discogsData = await getDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases`);\n            console.log('Raw Discogs data:', discogsData);\n            \n            const mapped = discogsData.releases.map(release => {\n                console.log('Processing release:', release);\n                \n                // Safely extract artist names\n                let artistNames = '';\n                if (release.basic_information.artists && Array.isArray(release.basic_information.artists)) {\n                    artistNames = release.basic_information.artists\n                        .map(a => (a && typeof a === 'object' && a.name) ? a.name : '')\n                        .filter(name => name !== '')\n                        .join(', ');\n                }\n                \n                // Safely extract genres\n                let genres = '';\n                if (release.basic_information.genres && Array.isArray(release.basic_information.genres)) {\n                    genres = release.basic_information.genres\n                        .map(g => (typeof g === 'string') ? g : '')\n                        .filter(g => g !== '')\n                        .join(', ');\n                }\n                \n                // Ensure all values are strings, numbers, or null\n                const mappedItem = {\n                    discogs_id: release.basic_information.id || null,\n                    instance_id: release.instance_id || null,\n                    thumb: (typeof release.basic_information.thumb === 'string') ? release.basic_information.thumb : '',\n                    title: (typeof release.basic_information.title === 'string') ? release.basic_information.title : '',\n                    artist: artistNames,\n                    genre: genres,\n                    notes: (typeof release.notes === 'string') ? release.notes : '',\n                    rating: (typeof release.rating === 'number') ? release.rating : 0,\n                    price_threshold: '',\n                    cover: (typeof release.basic_information.cover_image === 'string') ? release.basic_information.cover_image : '',\n                    folder_id: selectedFolder\n                };\n                \n                console.log('Mapped item:', mappedItem);\n                return mappedItem;\n            });\n            \n            // Fetch backend collection for this user\n            const backendCollection = await getBackendData(`/api/users/${authState.userId}/collection`);\n            console.log('Backend collection:', backendCollection);\n            \n            // Merge backend fields into collection\n            const merged = mapped.map(item => {\n                const backendItem = backendCollection.find(b => b.discogs_id === item.discogs_id);\n                const mergedItem = backendItem ? {\n                    ...item,\n                    notes: (typeof backendItem.notes === 'string') ? backendItem.notes : (item.notes || ''),\n                    rating: (typeof backendItem.rating === 'number') ? backendItem.rating : (item.rating || 0),\n                    price_threshold: (typeof backendItem.price_threshold === 'string' || typeof backendItem.price_threshold === 'number') ? backendItem.price_threshold.toString() : ''\n                } : item;\n                \n                console.log('Merged item:', mergedItem);\n                return mergedItem;\n            });\n            \n            setCollection(merged);\n            console.log('Final collection:', merged);\n            if (userInitiatedSync.current) {\n                alert('Synced with Discogs!');\n            }\n        } catch (err) {\n            console.error('Sync error:', err);\n            alert('Failed to sync with Discogs.');\n        } finally {\n            setSyncing(false);\n        }\n    };\n\n    const handleEditClick = async (discogsId, instanceId) => {\n        const item = collection.find(i => i.discogs_id === discogsId && i.instance_id === instanceId);\n        const newNotes = prompt('Edit notes:', item?.notes || '');\n        if (newNotes === null) return;\n        const newRatingStr = prompt('Edit rating (0-5):', item?.rating?.toString() || '0');\n        if (newRatingStr === null) return;\n        const newRating = parseInt(newRatingStr, 10);\n        if (isNaN(newRating) || newRating < 0 || newRating > 5) {\n            alert('Invalid rating. Must be 0-5.');\n            return;\n        }\n        const newPriceThresholdStr = prompt('Edit price threshold:', item?.price_threshold?.toString() || '');\n        if (newPriceThresholdStr === null) return;\n        const newPriceThreshold = parseFloat(newPriceThresholdStr);\n        if (isNaN(newPriceThreshold)) {\n            alert('Invalid price threshold.');\n            return;\n        }\n        try {\n            console.log('Updating Discogs collection:', {\n                endpoint: `/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`,\n                notes: newNotes,\n                rating: newRating\n            });\n            \n            // Update rating and notes on Discogs\n            const discogsResp = await putDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}?notes=${encodeURIComponent(newNotes)}&rating=${newRating}`);\n            console.log('Discogs PUT response:', discogsResp);\n            \n            console.log('Updating backend:', {\n                endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n                price_threshold: newPriceThreshold,\n                rating: newRating,\n                notes: newNotes\n            });\n            \n            // Update backend database\n            const backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, { \n                price_threshold: newPriceThreshold, \n                rating: newRating, \n                notes: newNotes \n            });\n            console.log('Backend PUT response:', backendResp);\n            \n            // Update UI\n            setCollection(collection.map(item =>\n                (item.discogs_id === discogsId && item.instance_id === instanceId)\n                    ? { ...item, notes: newNotes, rating: newRating, price_threshold: newPriceThreshold }\n                    : item\n            ));\n        } catch (err) {\n            console.error('Failed to update item:', err);\n            alert('Failed to update item.');\n        }\n    };\n\n    const handleDeleteClick = async (discogsId, instanceId) => {\n        try {\n            console.log('Deleting from Discogs collection:', {\n                endpoint: `/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}`,\n                discogsId,\n                instanceId\n            });\n            \n            // Delete from Discogs API\n            const discogsResp = await deleteDiscogsData(`/users/${authState.username}/collection/folders/${selectedFolder}/releases/${discogsId}/instances/${instanceId}`);\n            console.log('Discogs DELETE response:', discogsResp);\n            \n            console.log('Deleting from backend:', {\n                endpoint: `/api/users/${authState.userId}/collection/${discogsId}`,\n                discogsId\n            });\n            \n            // Delete from backend database\n            const backendResp = await updateData(`/api/users/${authState.userId}/collection/${discogsId}`, { \n                deleted: true \n            });\n            console.log('Backend DELETE response:', backendResp);\n            \n            // Update UI\n            setCollection(collection.filter(item => !(item.discogs_id === discogsId && item.instance_id === instanceId)));\n        } catch (err) {\n            console.error('Failed to delete item:', err);\n            alert('Failed to delete item from collection.');\n        }\n    };\n\n    const handleSyncClick = () => {\n        userInitiatedSync.current = true;\n        syncCollection();\n    };\n\n    // Helper function to safely convert any value to a string\n    const safeToString = (value) => {\n        if (value === null || value === undefined) return '';\n        if (typeof value === 'string') return value;\n        if (typeof value === 'number') return value.toString();\n        if (typeof value === 'boolean') return value.toString();\n        if (Array.isArray(value)) return value.join(', ');\n        if (typeof value === 'object') {\n            console.warn('Attempting to render object:', value);\n            return '[Object]';\n        }\n        return String(value);\n    };\n\n    const renderCollectionItems = () => {\n        return collection.map((item) => (\n            <tr key={`${item.discogs_id}-${item.instance_id}`}>\n                <th scope=\"row\">{safeToString(item.discogs_id)}</th>\n                <td>{safeToString(item.instance_id)}</td>\n                <td>\n                    {item.thumb ? (\n                        <img src={item.thumb} alt={safeToString(item.title)} style={{width: '50px', height: '50px'}} />\n                    ) : (\n                        <span>No image</span>\n                    )}\n                </td>\n                <td>{safeToString(item.title)}</td>\n                <td>{safeToString(item.artist)}</td>\n                <td>{safeToString(item.genre)}</td>\n                <td>{safeToString(item.notes)}</td>\n                <td>{safeToString(item.rating)}</td>\n                <td>{safeToString(item.price_threshold)}</td>\n                <td>\n                    <button \n                        type='button' \n                        className='btn btn-primary btn-sm' \n                        onClick={() => handleEditClick(item.discogs_id, item.instance_id)}>\n                        EDIT\n                    </button>\n                </td>\n                <td>\n                    <button \n                        type='button' \n                        className='btn btn-danger btn-sm' \n                        onClick={() => handleDeleteClick(item.discogs_id, item.instance_id)}>\n                        DELETE\n                    </button>\n                </td>\n            </tr>\n        ));\n    };\n\n    return (\n        <div>\n            <h1 className='mx-5'>\n                <u>{authState.username}'s Collection!</u>\n            </h1>\n            <div className='mx-5 my-2'>\n                <select \n                    className='form-select d-inline-block w-auto me-3' \n                    value={selectedFolder} \n                    onChange={(e) => setSelectedFolder(parseInt(e.target.value))}>\n                    {folders.map(folder => (\n                        <option key={folder.id} value={folder.id}>\n                            {folder.name} ({folder.count} items)\n                        </option>\n                    ))}\n                </select>\n                <button className='btn btn-success' onClick={handleSyncClick} disabled={syncing}>\n                    {syncing ? 'Syncing...' : 'Sync with Discogs'}\n                </button>\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Discogs #</th>\n                        <th scope=\"col\">Instance #</th>\n                        <th scope=\"col\">Cover</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Artist</th>\n                        <th scope=\"col\">Genre</th>\n                        <th scope=\"col\">Notes</th>\n                        <th scope=\"col\">Rating</th>\n                        <th scope=\"col\">Price Threshold</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderCollectionItems()}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default CollectionScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}