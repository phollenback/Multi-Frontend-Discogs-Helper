{"ast":null,"code":"var _jsxFileName = \"/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// Import the Navigate component from react-router-dom to handle navigation\nimport { Navigate } from 'react-router-dom';\n// Import the custom hook to access the authentication context\nimport { useAuthContext } from './AuthContext';\n\n// TODO 5 Define the PrivateRoute component\n\n// { children }: Is a special prop in React that represents the nested components \n// or renderable elements passed to the PrivateRoute component. \n// It allows PrivateRoute to render whatever components are wrapped inside it.\n\n// Curly Braces ({}): In JavaScript, curly braces are used for destructuring objects. \n// Here, { children } is a way to extract the children prop from the props object passed to the PrivateRoute component. \n//   (props.children)\n// 'children' is a React convention \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  // Destructure the isAuthenticated state from the authentication context\n  const {\n    isAuthenticated\n  } = useAuthContext();\n\n  // If the user is authenticated, render the children components\n  // Otherwise, navigate to the login page\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 39\n  }, this);\n};\n\n// Export the PrivateRoute component as the default export\n_s(PrivateRoute, \"tMNK+egaLfuqWbyG8DYOyFVw8vw=\", false, function () {\n  return [useAuthContext];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuthContext","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/peytonhollenback/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/PrivateRoute.js"],"sourcesContent":["import React from 'react';\n// Import the Navigate component from react-router-dom to handle navigation\nimport { Navigate } from 'react-router-dom';\n// Import the custom hook to access the authentication context\nimport { useAuthContext } from './AuthContext';\n\n// TODO 5 Define the PrivateRoute component\n\n// { children }: Is a special prop in React that represents the nested components \n// or renderable elements passed to the PrivateRoute component. \n// It allows PrivateRoute to render whatever components are wrapped inside it.\n\n// Curly Braces ({}): In JavaScript, curly braces are used for destructuring objects. \n// Here, { children } is a way to extract the children prop from the props object passed to the PrivateRoute component. \n//   (props.children)\n// 'children' is a React convention \nconst PrivateRoute = ({ children }) => {\n  // Destructure the isAuthenticated state from the authentication context\n  const { isAuthenticated } = useAuthContext();\n\n  // If the user is authenticated, render the children components\n  // Otherwise, navigate to the login page\n  return isAuthenticated ? children : <Navigate to=\"/\" />;\n};\n\n// Export the PrivateRoute component as the default export\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;AACA,SAASC,cAAc,QAAQ,eAAe;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC;EACA,MAAM;IAAEC;EAAgB,CAAC,GAAGN,cAAc,CAAC,CAAC;;EAE5C;EACA;EACA,OAAOM,eAAe,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACQ,EAAE,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;;AAED;AAAAN,EAAA,CATMF,YAAY;EAAA,QAEYH,cAAc;AAAA;AAAAY,EAAA,GAFtCT,YAAY;AAUlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}