{"ast":null,"code":"var _jsxFileName = \"/home/admin/Projects/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext as useReactContext, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useApi } from './utility/backSource';\n\n// Create a Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    postData\n  } = useApi();\n  const [cookies, setCookies, removeCookie] = useCookies();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // State to hold the authentication data (user info)\n  const [authState, setAuthState] = useState({\n    userId: '',\n    username: '',\n    email: '',\n    token: ''\n  });\n  const login = async data => {\n    try {\n      // Make the request to the backend to authenticate the user\n      const userData = await postData('/api/users/auth', data);\n      setCookies('token', userData.token, {\n        path: '/'\n      }); // set the token in cookies\n\n      setIsAuthenticated(true);\n\n      // Update the auth state with user data\n      setAuthState({\n        userId: userData.user.userId,\n        username: userData.user.username,\n        email: userData.user.email,\n        token: userData.token\n      });\n      return true;\n    } catch (error) {\n      // Handle the error (e.g., incorrect credentials)\n      console.error('Login failed:', error);\n      setIsAuthenticated(false);\n      return false;\n    }\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    setAuthState({\n      userId: '',\n      username: '',\n      email: '',\n      token: ''\n    });\n    removeCookie('token');\n    setIsAuthenticated(false);\n  };\n  useEffect(() => {\n    console.log('Auth State update:', authState);\n  }, [authState]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      authState,\n      login,\n      logout,\n      cookies\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to access the AuthContext\n_s(AuthProvider, \"9SuMWRIa3EeMCzQK3Hcw8pGJBVE=\", false, function () {\n  return [useApi, useCookies];\n});\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n  return useReactContext(AuthContext);\n};\n_s2(useAuthContext, \"33lq/yWn43NnofIEum2odi1mkoM=\", false, function () {\n  return [useReactContext];\n});\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useReactContext","useEffect","useCookies","useApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","postData","cookies","setCookies","removeCookie","isAuthenticated","setIsAuthenticated","authState","setAuthState","userId","username","email","token","login","data","userData","path","user","error","console","logout","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","$RefreshReg$"],"sources":["/home/admin/Projects/Cod3/Multi-Frontend-Discogs-Helper/react-front/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext as useReactContext, useEffect } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useApi } from './utility/backSource';\r\n\r\n// Create a Context\r\nconst AuthContext = createContext();\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const { postData } = useApi();\r\n  const [cookies, setCookies, removeCookie] = useCookies();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  \r\n  // State to hold the authentication data (user info)\r\n  const [authState, setAuthState] = useState({\r\n    userId: '',\r\n    username: '',\r\n    email: '',\r\n    token: ''\r\n  });\r\n\r\n  const login = async (data) => {\r\n    try {\r\n      // Make the request to the backend to authenticate the user\r\n      const userData = await postData('/api/users/auth', data);\r\n  \r\n      setCookies('token', userData.token, { path: '/' }); // set the token in cookies\r\n  \r\n      setIsAuthenticated(true);\r\n  \r\n      // Update the auth state with user data\r\n      setAuthState({\r\n        userId: userData.user.userId,    \r\n        username: userData.user.username, \r\n        email: userData.user.email,       \r\n        token: userData.token,           \r\n      });\r\n  \r\n      return true;\r\n    } catch (error) {\r\n      // Handle the error (e.g., incorrect credentials)\r\n      console.error('Login failed:', error);\r\n      setIsAuthenticated(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Function to log out the user\r\n  const logout = () => {\r\n    setAuthState({\r\n      userId: '',\r\n      username: '',\r\n      email: '',\r\n      token: '',\r\n    });\r\n\r\n    removeCookie('token');\r\n\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Auth State update:', authState);\r\n  }, [authState]); \r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, authState, login, logout, cookies }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to access the AuthContext\r\nexport const useAuthContext = () => useReactContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}